/**
 * @file Light.hpp
 * @author Jules
 * @brief
 * @version 0.1
 * @date 2021-10-07
 *
 * @copyright Copyright (c) 2021
 *
 */

#ifndef LIGHT_H
#define LIGHT_H

#include "Data.hpp"
#include "Sensor.hpp"
#include <iostream>
#include <string>



class Light : public Sensor<bool>
{
  public:
        //#########################################################
        //
        //          COPLIEN
        //

        /**
         * @brief Construct a new Light object with default attributes
         * 
         */
        Light();

        /**
         * @brief Construct a new Light object with a custom name
         * 
         * @param name
         */
        Light(std::string name_p);

        /**
         * @brief Construct a new Light object by copy
         * 
         * @param otherLight
         */
        Light(const Light& otherLight_p);

        /**
         * @brief Affect a Light object into another light object
         * 
         * @param otherLight : another light object
         * @return Light& 
         */
        Light& operator=(const Light& otherLight_p);

        /**
         * @brief Destroy the Light object
         * 
         */
        ~Light();

        //
        //          END COPLIEN
        //
        //#########################################################

        //#########################################################
        //
        //          METHODS
        //

        /**
         * @brief Get the Data from the sensor
         * 
         * @return Data : the data generated by the sensor
         */
        Data<bool> getData() const;

        /**
         * @brief Print the informations of the sensor
         * 
         */
        void printSensorInfo() const;

        //
        //          END METHODS
        //
        //#########################################################

  private:
        //#########################################################
        //
        //          METHODS
        //

        /**
         * @brief Generate a random value (1 = on || 0 = off)
         * 
         * @return float : the value generated
         */
        bool aleaGenVal() const;

        //
        //          END METHODS
        //
        //#########################################################




};

#endif //LIGHT_H
